import { useState, useEffect } from 'react';
import axios from 'axios';
import { Layout } from '@/components/Layout';
import { SearchInput } from '@/components/SearchInput';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import {
  Pagination,
  PaginationContent,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from '@/components/ui/pagination';
import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Filter, Plus, ArrowUpDown, FileText, ShieldAlert, Clock } from 'lucide-react';
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–ª–∞–≥–∏–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü
import { saveAs } from "file-saver";
import DejaVuSans from "@/fonts/DejaVuSans.ttf"; // –ü–æ–º–µ—Å—Ç–∏—Ç–µ —à—Ä–∏—Ñ—Ç –≤ `public/fonts`

axios.defaults.baseURL = 'http://localhost:5000';

export default function WarrantyCases() {
  const [searchQuery, setSearchQuery] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');
  const [showCreateDialog, setShowCreateDialog] = useState(false);
  const [showDetailDialog, setShowDetailDialog] = useState(false);
  const [showEditDialog, setShowEditDialog] = useState(false);
  const [showStatusDialog, setShowStatusDialog] = useState(false);
  const [showAddPartDialog, setShowAddPartDialog] = useState(false);
  const [selectedCase, setSelectedCase] = useState(null);
  const [warrantyCases, setWarrantyCases] = useState([]);
  const [customers, setCustomers] = useState([]);
  const [devices, setDevices] = useState([]);
  const [stores, setStores] = useState([]);
  const [employees, setEmployees] = useState([]);
  const [repairHistory, setRepairHistory] = useState([]);
  const [spareParts, setSpareParts] = useState([]);
  const [newStatus, setNewStatus] = useState({ status: '', comment: '' });
  const [newPart, setNewPart] = useState({ spare_part_id: '', quantity: '' });
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const repairStatuses = [
    '–ü—Ä–∏–Ω—è—Ç–æ',
    '–í —Ä–µ–º–æ–Ω—Ç–µ',
    '–û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—á–∞—Å—Ç–µ–π',
    '–û—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ',
    '–í—ã–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç—É',
  ];

  useEffect(() => {
    fetchWarrantyCases();
    fetchDropdownData();
    fetchSpareParts();
  }, [page, statusFilter, searchQuery]);

  const fetchWarrantyCases = async () => {
    try {
      setLoading(true);
      const response = await axios.get('/warranty-cases', {
        params: { page, status: statusFilter, search: searchQuery },
      });
      console.log(response.data.warrantyCases)
      setWarrantyCases(response.data.warrantyCases || []);
      setTotalPages(response.data.totalPages || 1);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const fetchDropdownData = async () => {
    try {
      const [customersRes, devicesRes, storesRes, employeesRes] = await Promise.all([
        axios.get('/customers'),
        axios.get('/devices'),
        axios.get('/stores'),
        axios.get('/employees'),
      ]);
      setCustomers(customersRes.data.customers || customersRes.data || []);
      setDevices(devicesRes.data || []);
      setStores(storesRes.data.stores || []);
      setEmployees(employeesRes.data || []);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤: ' + error.message);
    }
  };

  const fetchSpareParts = async () => {
    try {
      const response = await axios.get('/spare-parts');
      console.log(response.data)
      setSpareParts(response.data.spareParts || []);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø—á–∞—Å—Ç–µ–π: ' + error.message);
    }
  };

  const fetchRepairHistory = async (caseId) => {
    try {
      const response = await axios.get(`/warranty-cases/${caseId}/repair-history`);
      setRepairHistory(response.data || []);
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–º–æ–Ω—Ç–æ–≤: ' + error.message);
    }
  };

  const handleSearch = (value) => {
    setSearchQuery(value);
    setPage(1);
  };

  const handleViewDetails = (warrantyCase) => {
    setSelectedCase(warrantyCase);
    fetchRepairHistory(warrantyCase.id);
    setShowDetailDialog(true);
  };

  const handleCreateCase = async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const newCase = {
      customer_id: formData.get('customer'),
      device_id: formData.get('device'),
      store_id: formData.get('store'),
      employee_id: formData.get('technician'),
      issue_description: formData.get('issue'),
      status: formData.get('initial-status'),
    };
    try {
      await axios.post('/warranty-cases', newCase);
      setShowCreateDialog(false);
      fetchWarrantyCases();
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è: ' + error.message);
    }
  };

  const handleEditCase = async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const updatedCase = {
      customer_id: formData.get('customer'),
      device_id: formData.get('device'),
      store_id: formData.get('store'),
      employee_id: formData.get('technician'),
      issue_description: formData.get('issue'),
      status: selectedCase.status,
    };
    try {
      await axios.put(`/warranty-cases/${selectedCase.id}`, updatedCase);
      setShowEditDialog(false);
      setSelectedCase({ ...selectedCase, ...updatedCase });
      fetchWarrantyCases();
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è: ' + error.message);
    }
  };

  const handleChangeStatus = async (e) => {
    e.preventDefault();
    try {
      setLoading(true);
      await axios.put(`/warranty-cases/${selectedCase.id}`, { status: newStatus.status });
      await axios.post(`/warranty-cases/${selectedCase.id}/repair-history`, {
        status: newStatus.status,
        comment: newStatus.comment,
      });
      setShowStatusDialog(false);
      setSelectedCase({ ...selectedCase, status: newStatus.status });
      fetchRepairHistory(selectedCase.id);
      fetchWarrantyCases();
      setNewStatus({ status: '', comment: '' });
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleAddPart = async (e) => {
    e.preventDefault();
    try {
      setLoading(true);
      await axios.post(`/warranty-cases/${selectedCase.id}/repair-parts`, newPart);
      setShowAddPartDialog(false);
      fetchRepairHistory(selectedCase.id);
      setNewPart({ spare_part_id: '', quantity: '' });
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø—á–∞—Å—Ç–∏: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const exportCSV = () => {
    const headers = ["ID", "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ö–ª–∏–µ–Ω—Ç", "–ü—Ä–æ–±–ª–µ–º–∞", "–°—Ç–∞—Ç—É—Å", "–î–∞—Ç–∞", "–ú–∞–≥–∞–∑–∏–Ω"];
    const csvRows = warrantyCases.map((warrantyCase) => [
      warrantyCase.id,
      warrantyCase.Device?.model || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
      warrantyCase.Customer?.name || "–ù–µ —É–∫–∞–∑–∞–Ω",
      warrantyCase.issue_description,
      warrantyCase.status,
      warrantyCase.createdAt ? new Date(warrantyCase.createdAt).toLocaleDateString() : "-",
      warrantyCase.Store?.name || "–ù–µ —É–∫–∞–∑–∞–Ω",
    ]);

    const csvString =
        [headers.join(";"), ...csvRows.map((row) => row.join(";"))].join("\n");

    // üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ UTF-16LE
    const bom = new Uint8Array([0xFF, 0xFE]);
    const utf16Array = new Uint16Array([...csvString].map((char) => char.charCodeAt(0)));
    const csvBuffer = new Blob([bom, utf16Array], { type: "text/csv;charset=utf-16le;" });

    saveAs(csvBuffer, "warranty_cases.csv");
  };

  const arrayBufferToBase64 = (buffer: ArrayBuffer): Promise<string> => {
    return new Promise((resolve) => {
      const reader = new FileReader();
      reader.readAsDataURL(new Blob([buffer]));
      reader.onloadend = () => {
        const base64String = (reader.result as string).split(",")[1]; // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å data:...
        resolve(base64String);
      };
    });
  };

  const exportPDF = async () => {
    const doc = new jsPDF();

    try {
      // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç –∫–∞–∫ ArrayBuffer –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ Base64
      const fontBuffer = await fetch("/fonts/DejaVuSans.ttf").then((res) => res.arrayBuffer());
      const fontBase64 = await arrayBufferToBase64(fontBuffer);

      // üîπ –î–æ–±–∞–≤–ª—è–µ–º —à—Ä–∏—Ñ—Ç –≤ jsPDF –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
      doc.addFileToVFS("DejaVuSans.ttf", fontBase64);
      doc.addFont("DejaVuSans.ttf", "DejaVuSans", "normal");
      doc.setFont("DejaVuSans");

      // üîπ –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
      doc.text("–û—Ç—á—ë—Ç –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–º —Å–ª—É—á–∞—è–º", 14, 10);

      // üîπ –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
      autoTable(doc, {
        startY: 20,
        head: [["ID", "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ö–ª–∏–µ–Ω—Ç", "–ü—Ä–æ–±–ª–µ–º–∞", "–°—Ç–∞—Ç—É—Å", "–î–∞—Ç–∞", "–ú–∞–≥–∞–∑–∏–Ω"]],
        body: warrantyCases.map((warrantyCase) => [
          warrantyCase.id,
          warrantyCase.Device?.model || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
          warrantyCase.Customer?.name || "–ù–µ —É–∫–∞–∑–∞–Ω",
          warrantyCase.issue_description,
          warrantyCase.status,
          warrantyCase.createdAt ? new Date(warrantyCase.createdAt).toLocaleDateString() : "-",
          warrantyCase.Store?.name || "–ù–µ —É–∫–∞–∑–∞–Ω",
        ]),
        styles: { fontSize: 10 },
        headStyles: { fillColor: [22, 160, 133] }, // –¶–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
      });

      // üîπ –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
      doc.save("warranty_cases.pdf");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:", error);
    }
  };


  const handleCancelWarranty = async () => {
    try {
      setLoading(true);
      await axios.delete(`/warranty-cases/${selectedCase.id}`);
      setShowDetailDialog(false);
      fetchWarrantyCases();
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  return (
      <Layout>
        <div className="space-y-6">
          {error && <div className="text-red-500 p-2 bg-red-100 rounded">{error}</div>}

          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
            <div>
              <h1 className="text-3xl font-bold tracking-tight">–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ —Å–ª—É—á–∞–∏</h1>
              <p className="text-muted-foreground mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–º–∏ —Å–ª—É—á–∞—è–º–∏ –∏ —Ä–µ–º–æ–Ω—Ç–∞–º–∏</p>
            </div>
            <Button onClick={() => setShowCreateDialog(true)} disabled={loading}>
              <Plus className="mr-2 h-4 w-4" /> –°–æ–∑–¥–∞—Ç—å
            </Button>
          </div>

          <div className="flex flex-col sm:flex-row gap-4 items-start sm:items-center">
            <div className="w-full sm:w-auto flex-1">
              <SearchInput
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ ID, –∫–ª–∏–µ–Ω—Ç—É, —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–µ..."
                  onSearch={handleSearch}
                  className="w-full"
              />
            </div>

            <Select value={statusFilter} onValueChange={setStatusFilter}>
              <SelectTrigger className="w-full sm:w-[180px]">
                <div className="flex items-center">
                  <Filter className="mr-2 h-4 w-4"/>
                  <SelectValue/>
                </div>
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
                {repairStatuses.map((status) => (
                    <SelectItem key={status} value={status}>{status}</SelectItem>
                ))}
              </SelectContent>
            </Select>

            {/* –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á—ë—Ç–∞ */}
            <Select onValueChange={(format) => format === "csv" ? exportCSV() : exportPDF()}>
              <SelectTrigger className="w-full sm:w-[180px]">
                <div className="flex items-center">
                  <FileText className="mr-2 h-4 w-4"/>
                  <SelectValue placeholder="–≠–∫—Å–ø–æ—Ä—Ç"/>
                </div>
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="csv">–≠–∫—Å–ø–æ—Ä—Ç –≤ CSV</SelectItem>
                <SelectItem value="pdf">–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <Card>
            <CardHeader className="pb-3">
              <CardTitle>–°–ø–∏—Å–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤</CardTitle>
              <CardDescription>–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: {warrantyCases.length} –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤</CardDescription>
            </CardHeader>
            <CardContent>
              {loading ? (
                  <div className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
              ) : (
                  <>
                    <div className="rounded-md border">
                      <Table>
                        <TableHeader>
                          <TableRow>
                            <TableHead className="w-[120px]">
                              <div className="flex items-center">ID <ArrowUpDown className="ml-1 h-3 w-3" /></div>
                            </TableHead>
                            <TableHead>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</TableHead>
                            <TableHead>–ö–ª–∏–µ–Ω—Ç</TableHead>
                            <TableHead>–ü—Ä–æ–±–ª–µ–º–∞</TableHead>
                            <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                            <TableHead>–î–∞—Ç–∞</TableHead>
                            <TableHead>–ú–∞–≥–∞–∑–∏–Ω</TableHead>
                            <TableHead className="text-right">–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                          </TableRow>
                        </TableHeader>
                        <TableBody>
                          {warrantyCases.map((warrantyCase) => (
                              <TableRow key={warrantyCase.id}>
                                <TableCell className="font-medium">{warrantyCase.id}</TableCell>
                                <TableCell>
                                  <div>
                                    <div>{warrantyCase.Device?.model || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                                    <div className="text-xs text-muted-foreground">{warrantyCase.Device?.imei || '-'}</div>
                                  </div>
                                </TableCell>
                                <TableCell>{warrantyCase.Customer?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</TableCell>
                                <TableCell className="max-w-[200px] truncate">{warrantyCase.issue_description}</TableCell>
                                <TableCell>{warrantyCase.status}</TableCell>
                                <TableCell>
                                  {warrantyCase.createdAt ? new Date(warrantyCase.createdAt).toLocaleDateString() : '-'}
                                </TableCell>
                                <TableCell>{warrantyCase.Store?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</TableCell>
                                <TableCell className="text-right">
                                  <Button variant="ghost" size="sm" onClick={() => handleViewDetails(warrantyCase)}>
                                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                  </Button>
                                </TableCell>
                              </TableRow>
                          ))}
                        </TableBody>
                      </Table>
                    </div>
                    <div className="mt-4">
                      <Pagination>
                        <PaginationContent>
                          <PaginationItem>
                            <PaginationPrevious href="#" onClick={() => page > 1 && setPage(page - 1)} />
                          </PaginationItem>
                          {Array.from({ length: totalPages }, (_, i) => (
                              <PaginationItem key={i}>
                                <PaginationLink href="#" isActive={page === i + 1} onClick={() => setPage(i + 1)}>
                                  {i + 1}
                                </PaginationLink>
                              </PaginationItem>
                          ))}
                          <PaginationItem>
                            <PaginationNext href="#" onClick={() => page < totalPages && setPage(page + 1)} />
                          </PaginationItem>
                        </PaginationContent>
                      </Pagination>
                    </div>
                  </>
              )}
            </CardContent>
          </Card>
        </div>

        {/* –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è */}
        <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>
          <DialogContent className="sm:max-w-[700px]">
            <DialogHeader>
              <DialogTitle>–°–æ–∑–¥–∞–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è</DialogTitle>
              <DialogDescription>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–º —Å–ª—É—á–∞–µ</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleCreateCase} className="grid gap-6 py-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="customer">–ö–ª–∏–µ–Ω—Ç</Label>
                  <Select name="customer">
                    <SelectTrigger id="customer">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞" />
                    </SelectTrigger>
                    <SelectContent>
                      {customers.map((customer) => (
                          <SelectItem key={customer.id} value={customer.id.toString()}>
                            {customer.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="device">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</Label>
                  <Select name="device">
                    <SelectTrigger id="device">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ" />
                    </SelectTrigger>
                    <SelectContent>
                      {devices.map((device) => (
                          <SelectItem key={device.id} value={device.id.toString()}>
                            {device.model} ({device.imei})
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="store">–ú–∞–≥–∞–∑–∏–Ω</Label>
                  <Select name="store">
                    <SelectTrigger id="store">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω" />
                    </SelectTrigger>
                    <SelectContent>
                      {stores.map((store) => (
                          <SelectItem key={store.id} value={store.id.toString()}>
                            {store.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="technician">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫</Label>
                  <Select name="technician">
                    <SelectTrigger id="technician">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞" />
                    </SelectTrigger>
                    <SelectContent>
                      {employees.map((employee) => (
                          <SelectItem key={employee.id} value={employee.id.toString()}>
                            {employee.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
              </div>
              <div className="space-y-2">
                <Label htmlFor="issue">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</Label>
                <Textarea
                    id="issue"
                    name="issue"
                    placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º..."
                    rows={3}
                    required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="initial-status">–ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å</Label>
                <Select name="initial-status" defaultValue="–ü—Ä–∏–Ω—è—Ç–æ">
                  <SelectTrigger id="initial-status">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å" />
                  </SelectTrigger>
                  <SelectContent>
                    {repairStatuses.map((status) => (
                        <SelectItem key={status} value={status}>
                          {status}
                        </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              <DialogFooter>
                <Button variant="outline" type="button" onClick={() => setShowCreateDialog(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button type="submit" disabled={loading}>
                  {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å'}
                </Button>
              </DialogFooter>
            </form>
          </DialogContent>
        </Dialog>

        {/* –î–∏–∞–ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π */}
        <Dialog open={showDetailDialog} onOpenChange={setShowDetailDialog}>
          <DialogContent className="sm:max-w-[800px]">
            {selectedCase && (
                <>
                  <DialogHeader>
                    <DialogTitle className="flex items-center">
                      <FileText className="mr-2 h-5 w-5" /> –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å–ª—É—á–∞–π {selectedCase.id}
                    </DialogTitle>
                    <DialogDescription>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–º —Å–ª—É—á–∞–µ</DialogDescription>
                  </DialogHeader>
                  <Tabs defaultValue="details">
                    <TabsList className="grid w-full grid-cols-3">
                      <TabsTrigger value="details">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</TabsTrigger>
                      <TabsTrigger value="history">–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤</TabsTrigger>
                      <TabsTrigger value="parts">–ó–∞–ø—á–∞—Å—Ç–∏</TabsTrigger>
                    </TabsList>

                    <TabsContent value="details" className="space-y-4 mt-4">
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</h3>
                          <p className="text-base font-medium">{selectedCase.Device?.model || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                          <p className="text-sm text-muted-foreground">{selectedCase.Device?.imei || '-'}</p>
                        </div>
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–ö–ª–∏–µ–Ω—Ç</h3>
                          <p className="text-base font-medium">{selectedCase.Customer?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                        </div>
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–°—Ç–∞—Ç—É—Å</h3>
                          <p className="text-base mt-1">{selectedCase.status}</p>
                        </div>
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</h3>
                          <p className="text-base">
                            {selectedCase.createdAt ? new Date(selectedCase.createdAt).toLocaleDateString() : '-'}
                          </p>
                        </div>
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–ú–∞–≥–∞–∑–∏–Ω</h3>
                          <p className="text-base">{selectedCase.Store?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                        </div>
                        <div>
                          <h3 className="text-sm font-medium text-muted-foreground">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π</h3>
                          <p className="text-base">{selectedCase.Employee?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                        </div>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</h3>
                        <p className="text-base mt-1">{selectedCase.issue_description}</p>
                      </div>
                      <div className="flex justify-between mt-6">
                        <Button variant="outline" onClick={() => setShowStatusDialog(true)} disabled={loading}>
                          <Clock className="mr-2 h-4 w-4" /> –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
                        </Button>
                        <Button variant="outline" onClick={handleCancelWarranty} disabled={loading}>
                          <ShieldAlert className="mr-2 h-4 w-4" /> –û—Ç–º–µ–Ω–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—é
                        </Button>
                        <Button onClick={() => setShowEditDialog(true)} disabled={loading}>
                          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </Button>
                      </div>
                    </TabsContent>

                    <TabsContent value="history" className="mt-4">
                      <div className="space-y-4">
                        {repairHistory.length > 0 ? (
                            repairHistory.map((historyItem) => (
                                <div key={historyItem.id} className="bg-muted/50 p-4 rounded-lg border border-border">
                                  <div className="flex justify-between items-start">
                                    <div className="font-medium">{historyItem.status}</div>
                                    <div className="text-sm text-muted-foreground">
                                      {historyItem.updated_at ? new Date(historyItem.updated_at).toLocaleString() : '-'}
                                    </div>
                                  </div>
                                  <div className="text-sm mt-2">{historyItem.comment || '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</div>
                                </div>
                            ))
                        ) : (
                            <p className="text-center text-muted-foreground">–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
                        )}
                        <div className="flex justify-end mt-4">
                          <Button onClick={() => setShowStatusDialog(true)} disabled={loading}>
                            –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
                          </Button>
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="parts" className="mt-4">
                      <div className="rounded-md border">
                        <Table>
                          <TableHeader>
                            <TableRow>
                              <TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
                              <TableHead>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å</TableHead>
                              <TableHead>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</TableHead>
                              <TableHead>–°—Ç–æ–∏–º–æ—Å—Ç—å</TableHead>
                              <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                            </TableRow>
                          </TableHeader>
                          <TableBody>
                            {repairHistory.flatMap((historyItem) =>
                                historyItem.RepairParts?.map((part) => (
                                    <TableRow key={part.id}>
                                      <TableCell>{part.SparePart?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                      <TableCell>{part.SparePart?.manufacturer || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                      <TableCell>{part.quantity}</TableCell>
                                      <TableCell>{part.SparePart?.cost || '0'}</TableCell>
                                      <TableCell>{part.SparePart?.status || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                    </TableRow>
                                ))
                            ).length > 0 ? (
                                repairHistory.flatMap((historyItem) =>
                                    historyItem.RepairParts?.map((part) => (
                                        <TableRow key={part.id}>
                                          <TableCell>{part.SparePart?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                          <TableCell>{part.SparePart?.manufacturer || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                          <TableCell>{part.quantity}</TableCell>
                                          <TableCell>{part.SparePart?.cost || '0'}</TableCell>
                                          <TableCell>{part.SparePart?.status || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</TableCell>
                                        </TableRow>
                                    ))
                                )
                            ) : (
                                <TableRow>
                                  <TableCell colSpan={5} className="text-center">
                                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø—á–∞—Å—Ç—è—Ö
                                  </TableCell>
                                </TableRow>
                            )}
                          </TableBody>
                        </Table>
                      </div>
                      <div className="flex justify-end mt-4">
                        <Button onClick={() => setShowAddPartDialog(true)} disabled={loading}>
                          <Plus className="mr-2 h-4 w-4" /> –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å
                        </Button>
                      </div>
                    </TabsContent>
                  </Tabs>
                </>
            )}
          </DialogContent>
        </Dialog>

        {/* –î–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è */}
        <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>
          <DialogContent className="sm:max-w-[700px]">
            <DialogHeader>
              <DialogTitle>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å–ª—É—á–∞—è</DialogTitle>
              <DialogDescription>–û–±–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–º —Å–ª—É—á–∞–µ</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleEditCase} className="grid gap-6 py-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="customer">–ö–ª–∏–µ–Ω—Ç</Label>
                  <Select name="customer" defaultValue={selectedCase?.customer_id?.toString()}>
                    <SelectTrigger id="customer">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {customers.map((customer) => (
                          <SelectItem key={customer.id} value={customer.id.toString()}>
                            {customer.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="device">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</Label>
                  <Select name="device" defaultValue={selectedCase?.device_id?.toString()}>
                    <SelectTrigger id="device">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {devices.map((device) => (
                          <SelectItem key={device.id} value={device.id.toString()}>
                            {device.model} ({device.imei})
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="store">–ú–∞–≥–∞–∑–∏–Ω</Label>
                  <Select name="store" defaultValue={selectedCase?.store_id?.toString()}>
                    <SelectTrigger id="store">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {stores.map((store) => (
                          <SelectItem key={store.id} value={store.id.toString()}>
                            {store.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div className="space-y-2">
                  <Label htmlFor="technician">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫</Label>
                  <Select name="technician" defaultValue={selectedCase?.employee_id?.toString()}>
                    <SelectTrigger id="technician">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {employees.map((employee) => (
                          <SelectItem key={employee.id} value={employee.id.toString()}>
                            {employee.name}
                          </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
              </div>
              <div className="space-y-2">
                <Label htmlFor="issue">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</Label>
                <Textarea
                    id="issue"
                    name="issue"
                    defaultValue={selectedCase?.issue_description}
                    rows={3}
                    required
                />
              </div>
              <DialogFooter>
                <Button variant="outline" type="button" onClick={() => setShowEditDialog(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button type="submit" disabled={loading}>
                  {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                </Button>
              </DialogFooter>
            </form>
          </DialogContent>
        </Dialog>

        {/* –î–∏–∞–ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ */}
        <Dialog open={showStatusDialog} onOpenChange={setShowStatusDialog}>
          <DialogContent className="sm:max-w-[500px]">
            <DialogHeader>
              <DialogTitle>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞</DialogTitle>
              <DialogDescription>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleChangeStatus} className="grid gap-4 py-4">
              <div className="space-y-2">
                <Label htmlFor="status">–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å</Label>
                <Select
                    name="status"
                    onValueChange={(value) => setNewStatus({ ...newStatus, status: value })}
                >
                  <SelectTrigger id="status">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å" />
                  </SelectTrigger>
                  <SelectContent>
                    {repairStatuses.map((status) => (
                        <SelectItem key={status} value={status}>
                          {status}
                        </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</Label>
                <Textarea
                    id="comment"
                    name="comment"
                    placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Å—Ç–∞—Ç—É—Å–∞..."
                    rows={3}
                    onChange={(e) => setNewStatus({ ...newStatus, comment: e.target.value })}
                />
              </div>
              <DialogFooter>
                <Button variant="outline" type="button" onClick={() => setShowStatusDialog(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button type="submit" disabled={loading}>
                  {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                </Button>
              </DialogFooter>
            </form>
          </DialogContent>
        </Dialog>

        {/* –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏ */}
        <Dialog open={showAddPartDialog} onOpenChange={setShowAddPartDialog}>
          <DialogContent className="sm:max-w-[500px]">
            <DialogHeader>
              <DialogTitle>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏</DialogTitle>
              <DialogDescription>–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—á–∞—Å—Ç—å –∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleAddPart} className="grid gap-4 py-4">
              <div className="space-y-2">
                <Label htmlFor="spare_part">–ó–∞–ø—á–∞—Å—Ç—å</Label>
                <Select
                    name="spare_part_id"
                    onValueChange={(value) => setNewPart({ ...newPart, spare_part_id: value })}
                >
                  <SelectTrigger id="spare_part">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—á–∞—Å—Ç—å" />
                  </SelectTrigger>
                  <SelectContent>
                    {spareParts.map((part) => (
                        <SelectItem key={part.id} value={part.id.toString()}>
                          {part.name} ({part.manufacturer})
                        </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</Label>
                <Input
                    id="quantity"
                    name="quantity"
                    type="number"
                    min="1"
                    value={newPart.quantity}
                    onChange={(e) => setNewPart({ ...newPart, quantity: e.target.value })}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                    required
                />
              </div>
              <DialogFooter>
                <Button variant="outline" type="button" onClick={() => setShowAddPartDialog(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button type="submit" disabled={loading}>
                  {loading ? '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...' : '–î–æ–±–∞–≤–∏—Ç—å'}
                </Button>
              </DialogFooter>
            </form>
          </DialogContent>
        </Dialog>
      </Layout>
  );
}